version: "3"

volumes:
  db-data:
    external: false
  redis-data:
    external: false

services:
  db:
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    image: postgres@sha256:d4729fad66e863ffc6100716ee4e4479045086a98feca58a732c7624dad86ecd
    volumes:
      - db-data:/user/local/pgsql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DATABASE_USERNAME"]
      timeout: 20s
      retries: 10
    restart: always
  redis:
    image: redis@sha256:b22a5030704efa865bf03fdc4f5828d969f0edd1be9c159f0e9dc2f33be31f5b
    command: redis-server
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -h redis ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    restart: always
  web:
    build: .
    command: bundle exec puma -C config/puma.rb
    volumes:
      - .:/usr/src/app
    depends_on:
      - db
      - redis
    ports:
      - "3000:3000"
    env_file:
      - .env
    stdin_open: true
    tty: true
    entrypoint: ./docker-entrypoint.sh
  sidekiq:
    build: .
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
  cable:
    depends_on:
      - redis
    build: .
    command: puma -p 28080 cable/config.ru
    ports:
      - "28080:28080"
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
