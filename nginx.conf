# From http://chrisstump.online/2016/02/20/docker-existing-rails-application/

upstream puma {
  server web:3000;
}

server {
  # define your domain
  server_name domain.com;

  # define the public application root
  root   /usr/src/app/public;
  index  index.html;
  location ^~ /.well-known {
    allow all;
    root  /usr/src/app/certs;
  }
  client_max_body_size 100M;

  # define where Nginx should write its logs
  # access_log /app/log/nginx.access.log;
  # error_log /app/log/nginx.error.log;

  # deny requests for files that should never be accessed
  location ~ /\. {
    deny all;
  }

  location ~* ^.+\.(rb|log)$ {
    deny all;
  }

  # serve static (compiled) assets directly if they exist (for rails production)
 # location ^~ /assets/ {
 #    root /usr/src/app/public/assets;
 #    gzip_static on;
 #    expires max;
 #    add_header Cache-Control public;
 #  }

  # send non-static file requests to the app server
  location / {
    try_files $uri @rails;
    client_max_body_size 100M;
  }

  location @rails {
    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://puma;
    client_max_body_size 100M;
  }
}
